##
# VBox: A box that stacks its children vertically.
#
# TODO: Computes the height and relative positions of the children of this VBox.
# The layout algorithm has the following semantics:
#
#  - Each child is stacked on top of each other; no two children appear on the
#    same line.
#
#  - Margins of adjacent sibling nodes "collapse" into each other. That is,
#    the bottom margin of one node will overlap with the top margin of the next.
#    However, the top margin of the first child does not overlap with the top
#    padding of this VBox, and nor does the bottom margin of the last child
#    with the bottom padding of this VBox.
#
#  Use the sample TML page and reference PNG along the way :)
def VBox = Box:new({})

VBox.pass2_LayoutAndComputeHeight = lambda(self) {
    def yCursor = self.topPadding   # The y-offset of the current child
    def previousBottomMargin = 0
    for (child in self.children) {
      def collapsedTopMargin = max(0, child.topMargin - previousBottomMargin)
      child.x = self.leftPadding + child.leftMargin
      child.y = yCursor + collapsedTopMargin
      yCursor = yCursor + collapsedTopMargin + child.height + child.bottomMargin
      previousBottomMargin = child.bottomMargin      
    }
    self.height = yCursor + self.bottomPadding
}